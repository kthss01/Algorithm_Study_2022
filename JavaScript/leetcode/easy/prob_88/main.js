/**
 * easy
 * 88. Merge Sorted Array
 *
 * num1, num2 array와 m n 이 주어질 때 m, n 은 length
 * 오름차순 병합 정렬하기
 *
 * nums1 을 수정해야함 참고!
 */

/**
 * @param {number[]} nums1
 * @param {number} m
 * @param {number[]} nums2
 * @param {number} n
 * @return {void} Do not return anything, modify nums1 in-place instead.
 */
const merge = function (nums1, m, nums2, n) {
	// 	const temp = [
	// 		...nums1.filter((num1, idx1) => {
	// 			return idx1 < m;
	// 		}),
	// 		...nums2.filter((num2, idx2) => {
	// 			return idx2 < n;
	// 		}),
	// 	].sort((a, b) => a - b);

	// 	nums1.length = 0; // 배열 비우기
	// 	temp.forEach((e, i) => (nums1[i] = e));

	// merge
	let insertPos = m + n - 1;
	m--;
	n--;
	while (n >= 0) {
		nums1[insertPos--] = nums1[m] > nums2[n] ? nums1[m--] : nums2[n--];
	}
};

let nums1 = [];
let nums2 = [];
let m, n;
let ans = [];

// ex1
nums1 = [1, 2, 3, 0, 0, 0];
m = 3;
nums2 = [2, 5, 6];
n = 3;
ans = [1, 2, 2, 3, 5, 6];
merge(nums1, m, nums2, n);
console.log(nums1, ans);

// ex2
nums1 = [1];
m = 1;
nums2 = [];
n = 0;
ans = [1];
merge(nums1, m, nums2, n);
console.log(nums1, ans);

// ex3
nums1 = [0];
m = 0;
nums2 = [1];
n = 1;
ans = [1];
merge(nums1, m, nums2, n);
console.log(nums1, ans);

// ex4
nums1 = [
	-10, -10, -9, -9, -9, -8, -8, -7, -7, -7, -6, -6, -6, -6, -6, -6, -6, -5, -5,
	-5, -4, -4, -4, -3, -3, -2, -2, -1, -1, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 5, 5,
	6, 6, 6, 6, 7, 7, 7, 7, 8, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
];
m = 55;
nums2 = [
	-10, -10, -9, -9, -9, -9, -8, -8, -8, -8, -8, -7, -7, -7, -7, -7, -7, -7, -7,
	-6, -6, -6, -6, -5, -5, -5, -5, -5, -4, -4, -4, -4, -4, -3, -3, -3, -2, -2,
	-2, -2, -2, -2, -2, -1, -1, -1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7,
	7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9,
];
n = 99;
ans = [
	-10, -10, -10, -10, -9, -9, -9, -9, -9, -9, -9, -8, -8, -8, -8, -8, -8, -8,
	-7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -6, -6, -6, -6, -6, -6, -6, -6,
	-6, -6, -6, -5, -5, -5, -5, -5, -5, -5, -5, -4, -4, -4, -4, -4, -4, -4, -4,
	-3, -3, -3, -3, -3, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, 0,
	0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9,
];
merge(nums1, m, nums2, n);
console.log(nums1, ans);
